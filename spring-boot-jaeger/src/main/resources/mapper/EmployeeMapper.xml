<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.myst.web.jaeger.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="cn.myst.web.jaeger.model.employee.Employee">
        <!--@mbg.generated-->
        <!--@Table employee-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="last_name" jdbcType="VARCHAR" property="lastName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="d_id" jdbcType="INTEGER" property="dId"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, last_name, email, gender, d_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select t1.id,
               t1.last_name,
               t1.email,
               t1.gender,
               t1.d_id,
               t2.department_name
        from employee t1
                     left join department t2 on t1.d_id = t2.id
        where t1.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from employee
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.myst.web.jaeger.model.employee.Employee"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into employee (last_name, email, gender,
                              d_id)
        values (#{lastName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
                #{dId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="cn.myst.web.jaeger.model.employee.Employee" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="lastName != null">
                last_name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="dId != null">
                d_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="lastName != null">
                #{lastName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="dId != null">
                #{dId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.myst.web.jaeger.model.employee.Employee">
        <!--@mbg.generated-->
        update employee
        <set>
            <if test="lastName != null">
                last_name = #{lastName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="dId != null">
                d_id = #{dId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.myst.web.jaeger.model.employee.Employee">
        <!--@mbg.generated-->
        update employee
        set last_name = #{lastName,jdbcType=VARCHAR},
            email     = #{email,jdbcType=VARCHAR},
            gender    = #{gender,jdbcType=INTEGER},
            d_id      = #{dId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByAll" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select t1.id,
               t1.last_name,
               t1.email,
               t1.gender,
               t1.d_id,
               t2.department_name
        from employee t1
                     left join department t2 on t1.d_id = t2.id
        <where>
            true
            <if test="id != null">
                and t1.id = #{id,jdbcType=INTEGER}
            </if>
            <if test="lastName != null">
                and t1.last_name = #{lastName,jdbcType=VARCHAR}
            </if>
            <if test="email != null">
                and t1.email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="gender != null">
                and t1.gender = #{gender,jdbcType=INTEGER}
            </if>
            <if test="dId != null">
                and t1.d_id = #{dId,jdbcType=INTEGER}
            </if>

            <!-- Mybatis的bind 或使用 MySQL的 CONCAT（）函数用于将多个字符串连接成一个字符串-->
            <if test="keyword != null">
                <bind name="keyword" value="'%' + keyword + '%'"/>
            </if>
            <if test="keyword != null">
                and (last_name like #{keyword,jdbcType=VARCHAR} or email like #{keyword,jdbcType=VARCHAR} or gender
                        like #{gender,jdbcType=INTEGER})
            </if>
            <!-- 排序 -->
            order by
            <if test="sortKeys == null or sortKeys.size() == 0">
                last_name, id desc
            </if>
            <if test="sortKeys != null and sortKeys.size() != 0">
                <foreach collection="sortKeys" separator="," item="item">
                    ${item.field} ${item.sort}
                </foreach>
            </if>
        </where>
    </select>
    <delete id="deleteByIdIn">
        <!--@mbg.generated-->
        delete
        from employee
                where id in
        <foreach item="item" index="index" collection="idCollection"
                 open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </delete>
    <delete id="deleteByDIdIn">
        <!--@mbg.generated-->
        delete
        from employee
                where d_id in
        <foreach item="item" index="index" collection="dIdCollection"
                 open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </delete>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update employee
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="last_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.lastName != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.lastName,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="email = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.email != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.email,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="gender = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.gender != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.gender,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="d_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.dId != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.dId,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into employee
                (last_name, email, gender, d_id)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.lastName,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.gender,jdbcType=INTEGER},
             #{item.dId,jdbcType=INTEGER})
        </foreach>
    </insert>
    <select id="countByAll" resultType="int">
        select count(*)
        from employee
        <where>
            <if test="id != null">
                and id != #{id,jdbcType=INTEGER}
            </if>
            <if test="lastName != null">
                and last_name = #{lastName,jdbcType=VARCHAR}
            </if>
            <if test="email != null">
                and email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="gender != null">
                and gender = #{gender,jdbcType=INTEGER}
            </if>
            <if test="dId != null">
                and d_id = #{dId,jdbcType=INTEGER}
            </if>
        </where>
    </select>
</mapper>